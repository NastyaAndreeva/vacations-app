{"version":3,"file":"static/js/829.c6ffa18f.chunk.js","mappings":"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","sources":["components/NewRequest/NewRequest.styled.ts","components/NewRequest/NewRequest.tsx","pages/AddEdit/AddEdit.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const NewRequestFormStyled = styled(Form)`\n  padding: 20px;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  width: 1000px;\n  margin: 0 auto;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n`;\n\nexport const NotesInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  margin-left: 150px;\n  flex-direction: column;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled(Field)`\n  color: darkblue;\n  font-size: 16px;\n  background: #ffffff;\n  border: 2px solid #cacaca;\n  border-radius: 5px;\n  line-height: 25px;\n  padding: 10px 15px;\n  width: 300px;\n  outline: none;\n  &:focus {\n    color: teal;\n    border: 2px solid #000;\n  }\n`;\n\nexport const NotesInput = styled(Field)`\n  display: block;\n  width: 400px;\n  height: 300px;\n  color: darkblue;\n  font-size: 16px;\n  background: #ffffff;\n  border: 2px solid #cacaca;\n  border-radius: 5px;\n  line-height: 25px;\n  padding: 10px 15px;\n  outline: none;\n  &:focus {\n    color: teal;\n    border: 2px solid #000;\n  }\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 20px;\n  width: 300px;\n`;\n\nexport const ErrorMessage = styled.p`\n  color: tomato;\n  width: 300px;\n  position: absolute;\n  top: 75px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  padding: 10px 35px;\n  width: 200px;\n  margin: 0 auto;\n  margin-top: 20px;\n  background-color: lightblue;\n  color: black;\n  border-radius: 10px;\n  font-size: 20px;\n  &:hover,\n  &:focus {\n    background-color: beige;\n  }\n  transition: background-color 300ms ease;\n`;\n\nexport const NewRequestContainer = styled.div`\n  display: flex;\n`;\n","import { useState, useEffect } from 'react';\nimport days, { Dayjs } from 'dayjs';\nimport { useParams } from 'react-router-dom';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport TextField from '@mui/material/TextField';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  NewRequestFormStyled,\n  Label,\n  ErrorMessage,\n  InputContainer,\n  Button,\n  NewRequestContainer,\n  NotesInput,\n  NotesInputContainer,\n} from './NewRequest.styled';\nimport { getVacations } from 'helpers';\nimport { Vacation } from 'interfaces';\nimport { LOCALE_STORAGE_KEY } from 'constants/localeStorage';\nimport dayjs from 'dayjs';\n\nconst vacationTypes = [\n  'Annual leave',\n  'Family and medical leave',\n  'Parental leave',\n  'Sick leave',\n  'Unpaid leave',\n  'Study leave',\n];\n\nconst NewRequestSchema = Yup.object().shape({\n  vacationType: Yup.string().required('Required'),\n  startDate: Yup.string().required('Required'),\n  endDate: Yup.string().required('Required'),\n  note: Yup.string(),\n});\n\ninterface NewRequestFormValues {\n  vacationType: string;\n  startDate: Dayjs;\n  endDate: Dayjs;\n  note: string;\n}\n\nconst NewRequest = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const [vacationType, setVacationType] = useState('Annual leave');\n  const [vacations, setVacations] = useState<Vacation[]>([]);\n\n  const maxDate = dayjs().add(365, 'days').format('YYYY-MM-DD');\n  const minDate = dayjs().format('YYYY-MM-DD');\n\n  useEffect(() => {\n    setVacations(getVacations());\n  }, []);\n\n  const vacation: Vacation | undefined = vacations.find(\n    (el: Vacation) => String(el.id) === id\n  );\n\n  let initialValues: NewRequestFormValues = {\n    vacationType: vacationType,\n    startDate: id ? days(vacation?.startDate) : days(),\n    endDate: id ? days(vacation?.endDate) : days(),\n    note: id ? vacation?.note || '' : '',\n  };\n\n  const handleChange = (event: SelectChangeEvent) => {\n    setVacationType(event.target.value as string);\n  };\n\n  const handleSubmit = (values: NewRequestFormValues) => {\n    const vacation = {\n      id: id ? String(id) : String(vacations.length + 1),\n      vacationType: vacationType,\n      startDate: values.startDate.format('YYYY-MM-DD'),\n      endDate: values.endDate.format('YYYY-MM-DD'),\n      note: values.note,\n    };\n\n    if (id) {\n      vacations.splice(Number(id) - 1, 1, vacation);\n    } else {\n      vacations.push(vacation);\n    }\n\n    localStorage.setItem(LOCALE_STORAGE_KEY, JSON.stringify(vacations));\n    navigate('/');\n  };\n\n  return (\n    <Formik\n      validationSchema={NewRequestSchema}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched, values, setFieldValue }) => (\n        <NewRequestFormStyled>\n          <NewRequestContainer>\n            <div>\n              <InputContainer>\n                <Label htmlFor=\"vacationType\">Vacation type</Label>\n                <Select\n                  id=\"vacationType\"\n                  onChange={handleChange}\n                  name=\"vacationType\"\n                  value={vacationType}\n                  placeholder=\"Vacation type\"\n                >\n                  {vacationTypes.map(vacationType => (\n                    <MenuItem value={vacationType} key={vacationType}>\n                      {vacationType}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </InputContainer>\n              <InputContainer>\n                <Label htmlFor=\"startDate\">Start date</Label>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DatePicker\n                    onChange={(value: string | null) =>\n                      setFieldValue('startDate', value, true)\n                    }\n                    maxDate={maxDate}\n                    minDate={minDate}\n                    value={values.startDate}\n                    renderInput={(params: {}) => (\n                      <TextField\n                        error={Boolean(touched.startDate && errors.startDate)}\n                        label=\"Birthday\"\n                        margin=\"normal\"\n                        name=\"birthday\"\n                        variant=\"standard\"\n                        fullWidth\n                        {...params}\n                      />\n                    )}\n                  />\n                </LocalizationProvider>\n              </InputContainer>\n              <InputContainer>\n                <Label htmlFor=\"endDate\">End date</Label>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DatePicker\n                    onChange={(value: string | null) =>\n                      setFieldValue('endDate', value, true)\n                    }\n                    maxDate={maxDate}\n                    minDate={values.startDate.format('YYYY-MM-DD')}\n                    value={values.endDate}\n                    renderInput={(params: {}) => (\n                      <TextField\n                        error={Boolean(touched.endDate && errors.endDate)}\n                        margin=\"normal\"\n                        variant=\"standard\"\n                        fullWidth\n                        {...params}\n                      />\n                    )}\n                  />\n                </LocalizationProvider>\n              </InputContainer>\n            </div>\n            <NotesInputContainer>\n              <Label htmlFor=\"note\">Notes</Label>\n              <NotesInput id=\"note\" name=\"note\" placeholder=\"Note\" />\n              {errors.note && touched.note ? (\n                <ErrorMessage>{errors.note}</ErrorMessage>\n              ) : null}\n            </NotesInputContainer>\n          </NewRequestContainer>\n          <Button type=\"submit\">Save</Button>\n        </NewRequestFormStyled>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewRequest;\n","import Container from 'components/Container';\nimport NewRequest from 'components/NewRequest';\n\nconst AddEdit = () => {\n  return (\n    <Container>\n      <NewRequest />\n    </Container>\n  );\n};\n\nexport default AddEdit;\n"],"names":["NewRequestFormStyled","styled","Form","InputContainer","NotesInputContainer","NotesInput","Field","Label","ErrorMessage","Button","NewRequestContainer","vacationTypes","NewRequestSchema","Yup","shape","vacationType","required","startDate","endDate","note","navigate","useNavigate","id","useParams","useState","setVacationType","vacations","setVacations","maxDate","dayjs","add","format","minDate","useEffect","getVacations","vacation","find","el","String","initialValues","days","handleChange","event","target","value","validationSchema","onSubmit","values","length","splice","Number","push","localStorage","setItem","LOCALE_STORAGE_KEY","JSON","stringify","errors","touched","setFieldValue","htmlFor","Select","onChange","name","placeholder","map","MenuItem","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","renderInput","params","TextField","error","Boolean","label","margin","variant","fullWidth","type","Container"],"sourceRoot":""}