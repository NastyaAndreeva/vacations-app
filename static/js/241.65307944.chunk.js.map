{"version":3,"file":"static/js/241.65307944.chunk.js","mappings":"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","sources":["components/DashboardTable/DashboardTable.styled.ts","components/DashboardTable/DashboardTable.tsx","components/DashboardNavigation/Switcher/Switcher.styled.ts","components/DashboardNavigation/Switcher/Switcher.tsx","components/DashboardNavigation/CalendarView/CalendarView.styled.ts","components/DashboardNavigation/CalendarView/CalendarView.tsx","components/DashboardNavigation/DashboardNavigation.styled.ts","components/DashboardNavigation/DashboardNavigation.tsx","pages/DashBoard/DashBoard.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const EditButton = styled(NavLink)`\n  &:hover {\n    color: tomato;\n  }\n`;\n","import { FC } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { EditButton } from './DashboardTable.styled';\n\ninterface DashboardTableProps {\n  isActual: boolean;\n}\n\nfunction createData(\n  abscenceId: string,\n  type: string,\n  startDate: string,\n  endDate: string,\n  notes: string\n) {\n  return { abscenceId, type, startDate, endDate, notes };\n}\n\nconst rows = [\n  createData('1', 'regular', '03/12/2022', '17/12/2022', 'regular'),\n];\n\nconst DashboardTable: FC<DashboardTableProps> = () => {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Abscence ID</TableCell>\n            <TableCell align=\"center\">Type</TableCell>\n            <TableCell align=\"center\">Start date</TableCell>\n            <TableCell align=\"center\">End date</TableCell>\n            <TableCell align=\"center\">Notes</TableCell>\n            <TableCell align=\"center\">Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(({ abscenceId, type, startDate, endDate, notes }) => (\n            <TableRow key={abscenceId}>\n              <TableCell component=\"th\" scope=\"row\">\n                {abscenceId}\n              </TableCell>\n              <TableCell align=\"center\">{type}</TableCell>\n              <TableCell align=\"center\">{startDate}</TableCell>\n              <TableCell align=\"center\">{endDate}</TableCell>\n              <TableCell align=\"center\">{notes}</TableCell>\n              <TableCell align=\"center\">\n                <EditButton to=\"/edit\">Edit</EditButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default DashboardTable;\n","import styled from '@emotion/styled';\n\nexport const SwitcherContainer = styled.div`\n  display: flex;\n`;\n\nexport const SwitcherButton = styled.button`\n  cursor: pointer;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 10px 30px;\n  font-size: 18px;\n`;\n","import { FC } from 'react';\nimport { SwitcherContainer, SwitcherButton } from './Switcher.styled';\n\ninterface SwitcherProps {\n  isActual: boolean;\n  setIsActual: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Switcher: FC<SwitcherProps> = ({ isActual, setIsActual }) => {\n  return (\n    <SwitcherContainer>\n      <SwitcherButton\n        style={{ backgroundColor: isActual ? 'lightgreen' : 'lightgray' }}\n        onClick={() => setIsActual(true)}\n      >\n        Actual\n      </SwitcherButton>\n      <SwitcherButton\n        style={{ backgroundColor: !isActual ? 'lightgreen' : 'lightgray' }}\n        onClick={() => setIsActual(false)}\n      >\n        History\n      </SwitcherButton>\n    </SwitcherContainer>\n  );\n};\n\nexport default Switcher;\n","import { styled } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\n\nexport const MaterialUISwitch = styled(Switch)(({ theme }) => ({\n  width: 62,\n  height: 34,\n  padding: 7,\n  '& .MuiSwitch-switchBase': {\n    margin: 1,\n    padding: 0,\n    transform: 'translateX(6px)',\n    '&.Mui-checked': {\n      color: '#fff',\n      transform: 'translateX(22px)',\n      '& .MuiSwitch-thumb:before': {},\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\n    width: 30,\n    height: 30,\n    '&:before': {\n      content: \"''\",\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n    },\n  },\n  '& .MuiSwitch-track': {\n    opacity: 1,\n    backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n    borderRadius: 10,\n  },\n}));\n","import FormControlLabel from '@mui/material/FormControlLabel';\nimport { FC } from 'react';\nimport { MaterialUISwitch } from './CalendarView.styled';\n\ninterface CalendarViewProps {\n  isTable: boolean;\n  setIsTable: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CalendarView: FC<CalendarViewProps> = ({ isTable, setIsTable }) => {\n  return (\n    <FormControlLabel\n      control={\n        <MaterialUISwitch sx={{ m: 1 }} checked={isTable} value={isTable} />\n      }\n      label=\"Table/Calendar view\"\n      onClick={() => setIsTable(!isTable)}\n    />\n  );\n};\n\nexport default CalendarView;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavigationContainer = styled.div`\n  padding: 15px;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\nexport const LeftSideNavigation = styled.div`\n  display: flex;\n  width: 500px;\n  justify-content: space-between;\n`;\n\nexport const AddNewButton = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  width: 200px;\n  justify-content: space-between;\n  text-decoration: none;\n  font-size: 18px;\n  padding: 10px 20px;\n  border: 2px solid black;\n  border-radius: 10px;\n  &:hover {\n    color: tomato;\n  }\n`;\n","import React, { FC } from 'react';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport Switcher from './Switcher';\nimport CalendarView from 'components/DashboardNavigation/CalendarView';\nimport {\n  NavigationContainer,\n  AddNewButton,\n  LeftSideNavigation,\n} from './DashboardNavigation.styled';\n\ninterface DashboardNavigationProps {\n  isActual: boolean;\n  isTable: boolean;\n  setIsActual: React.Dispatch<React.SetStateAction<boolean>>;\n  setIsTable: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst DashboardNavigation: FC<DashboardNavigationProps> = ({\n  isActual,\n  isTable,\n  setIsActual,\n  setIsTable,\n}) => {\n  return (\n    <NavigationContainer>\n      <LeftSideNavigation>\n        <Switcher isActual={isActual} setIsActual={setIsActual} />\n        <AddNewButton to=\"/edit\">\n          <AiOutlinePlus />\n          New Request\n        </AddNewButton>\n      </LeftSideNavigation>\n\n      <CalendarView isTable={isTable} setIsTable={setIsTable} />\n    </NavigationContainer>\n  );\n};\n\nexport default DashboardNavigation;\n","import { useState } from 'react';\nimport DashboardTable from 'components/DashboardTable';\nimport Container from 'components/Container';\nimport DashboardNavigation from 'components/DashboardNavigation';\n\nconst DashBoard = () => {\n  const [isActual, setIsActual] = useState(true);\n  const [isTable, setIsTable] = useState(true);\n\n  return (\n    <Container>\n      <DashboardNavigation\n        isActual={isActual}\n        isTable={isTable}\n        setIsActual={setIsActual}\n        setIsTable={setIsTable}\n      />\n      {isTable ? <DashboardTable isActual={isActual} /> : <div>Calendar</div>}\n    </Container>\n  );\n};\n\nexport default DashBoard;\n"],"names":["EditButton","styled","NavLink","abscenceId","type","startDate","endDate","notes","rows","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","scope","to","SwitcherContainer","SwitcherButton","isActual","setIsActual","style","backgroundColor","onClick","MaterialUISwitch","Switch","theme","width","height","padding","margin","transform","color","palette","mode","content","position","left","top","backgroundRepeat","backgroundPosition","opacity","borderRadius","isTable","setIsTable","FormControlLabel","control","m","checked","value","label","NavigationContainer","LeftSideNavigation","AddNewButton","useState","Container"],"sourceRoot":""}