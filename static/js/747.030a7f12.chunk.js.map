{"version":3,"file":"static/js/747.030a7f12.chunk.js","mappings":"uOAGaA,GAAkBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAY,0MAY9BE,EAAiBF,EAAAA,EAAAA,IAAU,0GAM3BG,EAAiBH,EAAAA,EAAAA,GAAS,6CAI1BI,GAAQJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAa,8RAgBrBM,EAAQN,EAAAA,EAAAA,MAAY,iEAKpBO,EAAoBP,EAAAA,EAAAA,IAAU,6EAM9BQ,GAAiBR,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAa,0EAM9BS,EAAeT,EAAAA,EAAAA,EAAQ,wFAOvBU,EAASV,EAAAA,EAAAA,OAAa,oQ,SCjD7BW,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,cACPC,IAAI,GAAI,aACRH,SAAS,cAkEd,EAzDsB,WACpB,IAAMI,GAAWC,EAAAA,EAAAA,MAsBjB,OACE,SAAC,KAAM,CACLC,iBAAkBV,EAClBW,cAvBgC,CAClCR,MAAO,GACPE,SAAU,GACVO,UAAU,GAqBRC,SAlBiB,SAACC,GACpB,IAAMC,EAAO,CACXZ,MAAOW,EAAOX,MACdE,SAAUS,EAAOT,UAEfS,EAAOF,SACTI,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,IAE5CK,eAAeH,QAAQ,OAAQC,KAAKC,UAAUJ,IAGhDP,EAAS,IACX,EAM2B,SAEtB,gBAAGa,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAAO,OACjB,UAAClC,EAAe,YACd,SAACI,EAAc,qBACf,UAACD,EAAc,YACb,SAACI,EAAK,CAAC4B,QAAQ,QAAO,oBACtB,SAAC9B,EAAK,CAAC+B,GAAG,QAAQC,KAAK,QAAQC,YAAY,UAC1CL,EAAOlB,OAASmB,EAAQnB,OACvB,SAACL,EAAY,UAAEuB,EAAOlB,QACpB,SAEN,UAACZ,EAAc,YACb,SAACI,EAAK,CAAC4B,QAAQ,WAAU,uBACzB,SAAC9B,EAAK,CAAC+B,GAAG,WAAWC,KAAK,WAAWC,YAAY,aAChDL,EAAOhB,UAAYiB,EAAQjB,UAC1B,SAACP,EAAY,UAAEuB,EAAOhB,WACpB,SAEN,UAACT,EAAiB,YAChB,SAACC,EAAc,CAAC8B,KAAK,WAAWH,GAAG,WAAWC,KAAK,cACnD,kBAAOF,QAAQ,WAAU,6BAE3B,SAACxB,EAAM,CAAC4B,KAAK,SAAQ,qBACL,GAI1B,E,UC1EA,EARkB,WAChB,OACE,SAACC,EAAA,EAAS,WACR,SAAC,EAAS,KAGhB,C","sources":["components/LoginForm/LoginForm.styled.ts","components/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {  Form, Field } from 'formik';\n\nexport const LoginFormStyled = styled(Form)`\nwidth: 500px;\nmargin: 0 auto;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nborder: 2px solid black;\nborder-radius: 15px;\npadding: 20px;\nmargin-top: 50px;\n`\n\nexport const InputContainer = styled.div`\nposition: relative;\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 30px;`\n\nexport const LoginFormTitle = styled.h2`\ntext-align: center;\n`\n\nexport const Input = styled(Field)`\n  color: darkblue;\n  font-size: 16px;\n  background: #ffffff;\n  border: 2px solid #cacaca;\n  border-radius: 5px;\n  line-height: 25px;\n  padding: 10px 15px;\n  width: 300px;\n  outline: none;\n  &:focus {\n    color: teal;\n    border: 2px solid #000;\n  }\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 20px;\n  width: 300px;\n`;\n\nexport const CheckboxContainer = styled.div`\ndisplay: flex;\nalign-items: center;\nwidth: 300px;\n`\n\nexport const StyledCheckbox = styled(Field)`\nwidth: 20px;\nheight: 20px;\nmargin-right: 15px;\n`\n\nexport const ErrorMessage = styled.p`\ncolor: tomato;\nwidth: 300px;\nposition: absolute;\ntop: 75px;\n`\n\nexport const Button = styled.button`\ncursor: pointer;\npadding: 10px 35px;\nmargin-top: 20px;\nbackground-color: lightblue;\ncolor: black;\nborder-radius: 10px;\nfont-size: 20px;\n&:hover, &:focus {\n  background-color: beige;\n}\ntransition: background-color 300ms ease;\n`\n","import { FC } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  LoginFormStyled,\n  LoginFormTitle,\n  Input,\n  Label,\n  CheckboxContainer,\n  StyledCheckbox,\n  ErrorMessage,\n  InputContainer,\n  Button,\n} from './LoginForm.styled';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\ninterface MyFormValues {\n  email: string;\n  password: string;\n  remember: boolean;\n}\n\nconst LoginForm: FC = () => {\n  const navigate = useNavigate();\n\n  const initialValues: MyFormValues = {\n    email: '',\n    password: '',\n    remember: false,\n  };\n\n  const handleSubmit = (values: MyFormValues) => {\n    const user = {\n      email: values.email,\n      password: values.password,\n    };\n    if (values.remember) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      sessionStorage.setItem('user', JSON.stringify(user));\n    }\n\n    navigate('/');\n  };\n\n  return (\n    <Formik\n      validationSchema={LoginSchema}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched }) => (\n        <LoginFormStyled>\n          <LoginFormTitle>Login</LoginFormTitle>\n          <InputContainer>\n            <Label htmlFor=\"email\">Email</Label>\n            <Input id=\"email\" name=\"email\" placeholder=\"Email\" />\n            {errors.email && touched.email ? (\n              <ErrorMessage>{errors.email}</ErrorMessage>\n            ) : null}\n          </InputContainer>\n          <InputContainer>\n            <Label htmlFor=\"password\">Password</Label>\n            <Input id=\"password\" name=\"password\" placeholder=\"Password\" />\n            {errors.password && touched.password ? (\n              <ErrorMessage>{errors.password}</ErrorMessage>\n            ) : null}\n          </InputContainer>\n          <CheckboxContainer>\n            <StyledCheckbox type=\"checkbox\" id=\"remember\" name=\"remember\" />\n            <label htmlFor=\"checkbox\">Remember me</label>\n          </CheckboxContainer>\n          <Button type=\"submit\">Login</Button>\n        </LoginFormStyled>\n      )}\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from '../../components/LoginForm';\nimport Container from '../../components/Container';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LoginFormStyled","styled","Form","InputContainer","LoginFormTitle","Input","Field","Label","CheckboxContainer","StyledCheckbox","ErrorMessage","Button","LoginSchema","Yup","shape","email","required","password","min","max","navigate","useNavigate","validationSchema","initialValues","remember","onSubmit","values","user","localStorage","setItem","JSON","stringify","sessionStorage","errors","touched","htmlFor","id","name","placeholder","type","Container"],"sourceRoot":""}