{"version":3,"file":"static/js/498.fac5d0c3.chunk.js","mappings":"kJAAO,IAAMA,EAAqB,W,wHCArBC,EAAa,G,iGCEbC,EAAaC,EAAAA,EAAAA,OAAa,sK,SC0DvC,EA3CgD,SAAH,GAAuB,IAAjBC,EAAS,EAATA,UAC3CC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACC,EAAA,EAAc,CAACC,UAAWC,EAAAA,EAAM,UAC/B,UAACC,EAAA,EAAK,CAACC,GAAI,CAAEC,SAAU,KAAO,aAAW,eAAc,WACrD,SAACC,EAAA,EAAS,WACR,UAACC,EAAA,EAAQ,YACP,SAACC,EAAA,EAAS,2BACV,SAACA,EAAA,EAAS,CAACC,MAAM,SAAQ,mBACzB,SAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,yBACzB,SAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,uBACzB,SAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,oBACzB,SAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,2BAG7B,SAACC,EAAA,EAAS,UACPb,EAAUc,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAY,EAAZA,aAAcC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAI,OAC1D,UAACT,EAAA,EAAQ,YACP,SAACC,EAAA,EAAS,CAACP,UAAU,KAAKgB,MAAM,MAAK,SAClCL,KAEH,SAACJ,EAAA,EAAS,CAACC,MAAM,SAAQ,SAAEI,KAC3B,SAACL,EAAA,EAAS,CAACC,MAAM,SAAQ,SAAEK,KAC3B,SAACN,EAAA,EAAS,CAACC,MAAM,SAAQ,SAAEM,KAC3B,SAACP,EAAA,EAAS,CAACC,MAAM,SAAQ,SAAEO,KAC3B,SAACR,EAAA,EAAS,CAACC,MAAM,SAAQ,UACvB,SAACd,EAAU,CACTiB,GAAIA,EACJM,QAAS,WACPpB,EAAS,SAAD,OAAUc,GACpB,EAAE,sBAbOA,EAkBJ,UAMvB,E,oBCxDaO,EAAoBvB,EAAAA,EAAAA,IAAU,0CAI9BwB,EAAiBxB,EAAAA,EAAAA,OAAa,2ICqB3C,EAnBoC,SAAH,GAAmC,IAA7ByB,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAC/C,OACE,UAACH,EAAiB,YAChB,SAACC,EAAc,CACbG,MAAO,CAAEC,gBAAiBH,EAAW,aAAe,aACpDH,QAAS,kBAAMI,GAAY,EAAK,EAAC,qBAInC,SAACF,EAAc,CACbG,MAAO,CAAEC,gBAAkBH,EAA0B,YAAf,cACtCH,QAAS,kBAAMI,GAAY,EAAM,EAAC,uBAM1C,E,4BCtBaG,GAAmB7B,EAAAA,EAAAA,IAAO8B,EAAAA,EAAP9B,EAAe,gBAAG+B,EAAK,EAALA,MAAK,MAAQ,CAC7DC,MAAO,GACPC,OAAQ,GACRC,QAAS,EACT,0BAA2B,CACzBC,OAAQ,EACRD,QAAS,EACTE,UAAW,kBACX,gBAAiB,CACfC,MAAO,OACPD,UAAW,mBACX,4BAA6B,CAAC,IAGlC,qBAAsB,CACpBR,gBAAwC,SAAvBG,EAAMO,QAAQC,KAAkB,UAAY,UAC7DP,MAAO,GACPC,OAAQ,GACR,WAAY,CACVO,QAAS,KACTC,SAAU,WACVT,MAAO,OACPC,OAAQ,OACRS,KAAM,EACNC,IAAK,EACLC,iBAAkB,YAClBC,mBAAoB,WAGxB,qBAAsB,CACpBC,QAAS,EACTlB,gBAAwC,SAAvBG,EAAMO,QAAQC,KAAkB,UAAY,UAC7DQ,aAAc,IAEjB,IChBD,EAZ4C,SAAH,GAAiC,IAA3BC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WACtD,OACE,SAACC,EAAA,EAAgB,CACfC,SACE,SAACtB,EAAgB,CAACrB,GAAI,CAAE4C,EAAG,GAAKC,QAASL,EAASM,MAAON,IAE3DO,MAAM,sBACNjC,QAAS,kBAAM2B,GAAYD,EAAQ,GAGzC,E,UChBaQ,EAAsBxD,EAAAA,EAAAA,IAAU,uHAMhCyD,EAAqBzD,EAAAA,EAAAA,IAAU,8FAM/B0D,GAAe1D,EAAAA,EAAAA,GAAO2D,EAAAA,GAAP3D,CAAe,qRCuB3C,EArB0D,SAAH,GAKhD,IAJLyB,EAAQ,EAARA,SACAuB,EAAO,EAAPA,QACAtB,EAAW,EAAXA,YACAuB,EAAU,EAAVA,WAEA,OACE,UAACO,EAAmB,YAClB,UAACC,EAAkB,YACjB,SAAC,EAAQ,CAAChC,SAAUA,EAAUC,YAAaA,KAC3C,UAACgC,EAAY,CAACE,GAAG,QAAO,WACtB,SAAC,MAAa,IAAG,qBAKrB,SAAC,EAAY,CAACZ,QAASA,EAASC,WAAYA,MAGlD,E,UClCaY,EAAe7D,EAAAA,EAAAA,IAAU,2KAQzB8D,EAAc9D,EAAAA,EAAAA,IAAU,+FAOxB+D,EAAY/D,EAAAA,EAAAA,IAAU,wEAKtBgE,EAAYhE,EAAAA,EAAAA,IAAU,6GCpBtBiE,EAAgBjE,EAAAA,EAAAA,GAAS,sEAKzBkE,GAAiBlE,EAAAA,EAAAA,IAAU,0CAI3BmE,GAAkBnE,EAAAA,EAAAA,IAAU,qGAM5BoE,GAAgBpE,EAAAA,EAAAA,OAAa,gOCqB1C,GAvBoD,SAAH,GAI1C,IAHLqE,EAAU,EAAVA,WACAC,EAAW,EAAXA,YACAC,EAAY,EAAZA,aAEA,OACE,UAACJ,GAAe,YACd,UAACF,EAAa,WACXM,EAAY,IAAGD,MAElB,UAACJ,GAAc,YACb,SAACE,GAAa,CAAC9C,QAAS,kBAAM+C,GAAW,SAAAG,GAAC,OAAIA,EAAI1E,CAAU,GAAC,EAAC,uBAG9D,SAACsE,GAAa,CAAC9C,QAAS,kBAAM+C,EAAW,EAAE,EAAC,sBAC5C,SAACD,GAAa,CAAC9C,QAAS,kBAAM+C,GAAW,SAAAG,GAAC,OAAIA,EAAI1E,CAAU,GAAC,EAAC,4BAMtE,ECoBA,GAjCoC,SAAH,GAK1B,IAJL2E,EAAY,EAAZA,aACAJ,EAAU,EAAVA,WACAC,EAAW,EAAXA,YACAC,EAAY,EAAZA,aAEA,OACE,4BACE,SAAC,GAAgB,CACfF,WAAYA,EACZC,YAAaA,EACbC,aAAcA,KAEhB,SAACV,EAAY,UACVY,EAAa1D,KAAI,YAAkC,IAA/B2D,EAAG,EAAHA,IAAKC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QACnC,OACE,SAACd,EAAW,CACVnC,MAAO,CAAEC,gBAAiB+C,EAAY,UAAY,WAAY,UAG9D,SAACZ,EAAS,WACR,SAACC,EAAS,CAACrC,MAAO,CAAEU,MAAOuC,EAAU,SAAW,SAAU,SACvDF,QAJAG,EAAAA,EAAAA,MASX,QAIR,E,iCChBA,GAnCwB,SAACC,GAAoC,IAAjBC,EAAO,uDAAG,EAC9CC,EAAQC,OACR/D,EAAY+D,OACfC,IAAIH,EAAS,OACbI,QAAQ,SACRA,QAAQ,QAELC,GAAO,QAAIC,MAAMP,IAAY/D,KAAI,SAACuE,EAAGC,GACzC,IAAMC,EAAatE,EAAUgE,IAAI,EAAIK,EAAO,OACtCZ,EACyB,IAA7Bc,OAAOD,EAAWd,QAA6C,IAA7Be,OAAOD,EAAWd,OAGhDE,EACJY,EAAWE,OAAO,gBAAkBV,EAAMU,OAAO,cAQnD,MANoB,CAClBhB,IAAKe,OAAOD,EAAWE,OAAO,MAC9Bf,UAAAA,EACAC,QAAAA,EAIJ,IAEML,EAAeU,OAClBC,IAAIH,EAAUjF,EAAY,SAC1BqF,QAAQ,SACRO,OAAO,QACJpB,EAAcW,OACjBC,IAAIH,EAAUjF,EAAY,SAC1B6F,OACH,MAAO,CAAEP,KAAAA,EAAMb,aAAAA,EAAcD,YAAAA,EAC/B,E,UCeA,GApCsB,WACpB,IAAMrE,EAAY2F,KAAKC,MACrBC,aAAaC,QAAQlG,GAAAA,IAAuB,MAG9C,GAAgCmG,EAAAA,EAAAA,WAAS,GAAK,eAAvCvE,EAAQ,KAAEC,EAAW,KAC5B,GAA8BsE,EAAAA,EAAAA,WAAS,GAAK,eAArChD,EAAO,KAAEC,EAAU,KAC1B,GAA8B+C,EAAAA,EAAAA,UAAS,GAAE,eAAlCjB,EAAO,KAAEV,EAAU,KAC1B,GAAwC2B,EAAAA,EAAAA,UAAwB,IAAG,eAA5DvB,EAAY,KAAEwB,EAAe,KAMpC,OAJAC,EAAAA,EAAAA,YAAU,WACRD,EAAgBE,GAAgBrG,EAAYiF,GAASK,KACvD,GAAG,CAACL,KAGF,UAACqB,EAAA,EAAS,YACR,SAAC,EAAmB,CAClB3E,SAAUA,EACVuB,QAASA,EACTtB,YAAaA,EACbuB,WAAYA,IAEbD,GACC,SAAC,EAAc,CAACvB,SAAUA,EAAUxB,UAAWA,KAE/C,SAAC,GAAQ,CACPwE,aAAcA,EACdJ,WAAYA,EACZC,YAAa6B,GAAgBrG,EAAYiF,GAAST,YAClDC,aAAc4B,GAAgBrG,EAAYiF,GAASR,iBAK7D,C","sources":["constants/localeStorage.ts","constants/totalDays.ts","components/DashboardTable/DashboardTable.styled.ts","components/DashboardTable/DashboardTable.tsx","components/DashboardNavigation/Switcher/Switcher.styled.ts","components/DashboardNavigation/Switcher/Switcher.tsx","components/DashboardNavigation/CalendarView/CalendarView.styled.ts","components/DashboardNavigation/CalendarView/CalendarView.tsx","components/DashboardNavigation/DashboardNavigation.styled.ts","components/DashboardNavigation/DashboardNavigation.tsx","components/Calendar/Calendar.styled.ts","components/Calendar/CalendarControls/CalendarControls.styled.ts","components/Calendar/CalendarControls/CalendarControls.tsx","components/Calendar/Calendar.tsx","helpers/getCalendarDays.ts","pages/DashBoard/DashBoard.tsx"],"sourcesContent":["export const LOCALE_STORAGE_KEY = 'vacations';\n","export const TOTAL_DAYS = 42;\n","import styled from '@emotion/styled';\n\nexport const EditButton = styled.button`\n  text-decoration: none;\n  cursor: pointer;\n  border-radius: 10px;\n  width: 100px;\n  height: 30px;\n  &:hover {\n    color: tomato;\n  }\n`;\n","import { FC } from 'react';\nimport { useNavigate } from 'react-router';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { EditButton } from './DashboardTable.styled';\nimport { Vacation } from 'interfaces';\n\ninterface DashboardTableProps {\n  isActual: boolean;\n  vacations: Vacation[];\n}\n\nconst DashboardTable: FC<DashboardTableProps> = ({ vacations }) => {\n  const navigate = useNavigate();\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Abscence ID</TableCell>\n            <TableCell align=\"center\">Type</TableCell>\n            <TableCell align=\"center\">Start date</TableCell>\n            <TableCell align=\"center\">End date</TableCell>\n            <TableCell align=\"center\">Notes</TableCell>\n            <TableCell align=\"center\">Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {vacations.map(({ id, vacationType, startDate, endDate, note }) => (\n            <TableRow key={id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {id}\n              </TableCell>\n              <TableCell align=\"center\">{vacationType}</TableCell>\n              <TableCell align=\"center\">{startDate}</TableCell>\n              <TableCell align=\"center\">{endDate}</TableCell>\n              <TableCell align=\"center\">{note}</TableCell>\n              <TableCell align=\"center\">\n                <EditButton\n                  id={id}\n                  onClick={() => {\n                    navigate(`/edit/${id}`);\n                  }}\n                >\n                  Edit\n                </EditButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default DashboardTable;\n","import styled from '@emotion/styled';\n\nexport const SwitcherContainer = styled.div`\n  display: flex;\n`;\n\nexport const SwitcherButton = styled.button`\n  cursor: pointer;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 10px 30px;\n  font-size: 18px;\n`;\n","import { FC } from 'react';\nimport { SwitcherContainer, SwitcherButton } from './Switcher.styled';\n\ninterface SwitcherProps {\n  isActual: boolean;\n  setIsActual: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Switcher: FC<SwitcherProps> = ({ isActual, setIsActual }) => {\n  return (\n    <SwitcherContainer>\n      <SwitcherButton\n        style={{ backgroundColor: isActual ? 'lightgreen' : 'lightgray' }}\n        onClick={() => setIsActual(true)}\n      >\n        Actual\n      </SwitcherButton>\n      <SwitcherButton\n        style={{ backgroundColor: !isActual ? 'lightgreen' : 'lightgray' }}\n        onClick={() => setIsActual(false)}\n      >\n        History\n      </SwitcherButton>\n    </SwitcherContainer>\n  );\n};\n\nexport default Switcher;\n","import { styled } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\n\nexport const MaterialUISwitch = styled(Switch)(({ theme }) => ({\n  width: 62,\n  height: 34,\n  padding: 7,\n  '& .MuiSwitch-switchBase': {\n    margin: 1,\n    padding: 0,\n    transform: 'translateX(6px)',\n    '&.Mui-checked': {\n      color: '#fff',\n      transform: 'translateX(22px)',\n      '& .MuiSwitch-thumb:before': {},\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\n    width: 30,\n    height: 30,\n    '&:before': {\n      content: \"''\",\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n    },\n  },\n  '& .MuiSwitch-track': {\n    opacity: 1,\n    backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n    borderRadius: 10,\n  },\n}));\n","import FormControlLabel from '@mui/material/FormControlLabel';\nimport { FC } from 'react';\nimport { MaterialUISwitch } from './CalendarView.styled';\n\ninterface CalendarViewProps {\n  isTable: boolean;\n  setIsTable: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CalendarView: FC<CalendarViewProps> = ({ isTable, setIsTable }) => {\n  return (\n    <FormControlLabel\n      control={\n        <MaterialUISwitch sx={{ m: 1 }} checked={isTable} value={isTable} />\n      }\n      label=\"Table/Calendar view\"\n      onClick={() => setIsTable(!isTable)}\n    />\n  );\n};\n\nexport default CalendarView;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavigationContainer = styled.div`\n  padding: 15px;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\nexport const LeftSideNavigation = styled.div`\n  display: flex;\n  width: 500px;\n  justify-content: space-between;\n`;\n\nexport const AddNewButton = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  width: 200px;\n  justify-content: space-between;\n  text-decoration: none;\n  font-size: 18px;\n  padding: 10px 20px;\n  border: 2px solid black;\n  border-radius: 10px;\n  &:hover {\n    color: tomato;\n  }\n`;\n","import React, { FC } from 'react';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport Switcher from './Switcher';\nimport CalendarView from 'components/DashboardNavigation/CalendarView';\nimport {\n  NavigationContainer,\n  AddNewButton,\n  LeftSideNavigation,\n} from './DashboardNavigation.styled';\n\ninterface DashboardNavigationProps {\n  isActual: boolean;\n  isTable: boolean;\n  setIsActual: React.Dispatch<React.SetStateAction<boolean>>;\n  setIsTable: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst DashboardNavigation: FC<DashboardNavigationProps> = ({\n  isActual,\n  isTable,\n  setIsActual,\n  setIsTable,\n}) => {\n  return (\n    <NavigationContainer>\n      <LeftSideNavigation>\n        <Switcher isActual={isActual} setIsActual={setIsActual} />\n        <AddNewButton to=\"/edit\">\n          <AiOutlinePlus />\n          New Request\n        </AddNewButton>\n      </LeftSideNavigation>\n\n      <CalendarView isTable={isTable} setIsTable={setIsTable} />\n    </NavigationContainer>\n  );\n};\n\nexport default DashboardNavigation;\n","import styled from '@emotion/styled';\n\nexport const CalendarGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n  grid-gap: 1px;\n  background-color: #404040;\n`;\n\nexport const CellWrapper = styled.div`\n  padding: 10px;\n  width: 182px;\n  height: 80px;\n  color: #dddcdd;\n`;\n\nexport const RowInCell = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const DayInCell = styled.div`\n  height: 33px;\n  width: 33px;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const CalendarTitle = styled.h3`\n  font-weight: 500;\n  color: darkgoldenrod;\n`;\n\nexport const ControlButtons = styled.div`\n  display: flex;\n`;\n\nexport const ControlsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ControlButton = styled.button`\n  height: 30px;\n  width: 95px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-radius: 10px;\n  &:not(:last-child) {\n    margin-right: 3px;\n  }\n`;\n","import { FC } from 'react';\nimport {\n  CalendarTitle,\n  ControlButtons,\n  ControlsWrapper,\n  ControlButton,\n} from './CalendarControls.styled';\nimport { TOTAL_DAYS } from 'constants/totalDays';\n\ninterface CalendarControlsProps {\n  setPayload: React.Dispatch<React.SetStateAction<number>>;\n  currentYear: number;\n  currentMonth: string;\n}\n\nconst CalendarControls: FC<CalendarControlsProps> = ({\n  setPayload,\n  currentYear,\n  currentMonth,\n}) => {\n  return (\n    <ControlsWrapper>\n      <CalendarTitle>\n        {currentMonth} {currentYear}\n      </CalendarTitle>\n      <ControlButtons>\n        <ControlButton onClick={() => setPayload(s => s - TOTAL_DAYS)}>\n          Previous\n        </ControlButton>\n        <ControlButton onClick={() => setPayload(0)}>Current</ControlButton>\n        <ControlButton onClick={() => setPayload(s => s + TOTAL_DAYS)}>\n          Following\n        </ControlButton>\n      </ControlButtons>\n    </ControlsWrapper>\n  );\n};\n\nexport default CalendarControls;\n","import { FC } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  CalendarGrid,\n  CellWrapper,\n  RowInCell,\n  DayInCell,\n} from './Calendar.styled';\nimport CalendarControls from './CalendarControls';\n\ninterface Day {\n  day: number;\n  isWeekend: boolean;\n  isToday: boolean;\n}\n\ninterface CalendarProps {\n  calendarDays: Day[];\n  setPayload: React.Dispatch<React.SetStateAction<number>>;\n  currentYear: number;\n  currentMonth: string;\n}\n\nconst Calendar: FC<CalendarProps> = ({\n  calendarDays,\n  setPayload,\n  currentYear,\n  currentMonth,\n}) => {\n  return (\n    <div>\n      <CalendarControls\n        setPayload={setPayload}\n        currentYear={currentYear}\n        currentMonth={currentMonth}\n      />\n      <CalendarGrid>\n        {calendarDays.map(({ day, isWeekend, isToday }) => {\n          return (\n            <CellWrapper\n              style={{ backgroundColor: isWeekend ? '#272829' : '#1e1f21' }}\n              key={nanoid()}\n            >\n              <RowInCell>\n                <DayInCell style={{ color: isToday ? 'tomato' : 'white' }}>\n                  {day}\n                </DayInCell>\n              </RowInCell>\n            </CellWrapper>\n          );\n        })}\n      </CalendarGrid>\n    </div>\n  );\n};\n\nexport default Calendar;\n","import { TOTAL_DAYS } from 'constants/totalDays';\nimport dayjs from 'dayjs';\n\nconst getCalendarDays = (totalDays: number, payload = 0) => {\n  const today = dayjs();\n  const startDate = dayjs()\n    .add(payload, 'day')\n    .startOf('month')\n    .startOf('week');\n\n  const days = [...Array(totalDays)].map((_, index) => {\n    const currentDay = startDate.add(1 + index, 'day');\n    const isWeekend =\n      Number(currentDay.day()) === 0 || Number(currentDay.day()) === 6\n        ? true\n        : false;\n    const isToday =\n      currentDay.format('YYYY-MM-DD') === today.format('YYYY-MM-DD');\n\n    const formatedDay = {\n      day: Number(currentDay.format('D')),\n      isWeekend,\n      isToday,\n    };\n\n    return formatedDay;\n  });\n\n  const currentMonth = dayjs()\n    .add(payload / TOTAL_DAYS, 'month')\n    .startOf('month')\n    .format('MMMM');\n  const currentYear = dayjs()\n    .add(payload / TOTAL_DAYS, 'month')\n    .year();\n  return { days, currentMonth, currentYear };\n};\n\nexport default getCalendarDays;\n","import { useState, useEffect, FC } from 'react';\nimport { TOTAL_DAYS } from 'constants/totalDays';\nimport DashboardTable from 'components/DashboardTable';\nimport Container from 'components/Container';\nimport DashboardNavigation from 'components/DashboardNavigation';\nimport Calendar from 'components/Calendar';\nimport getCalendarDays from 'helpers/getCalendarDays';\nimport { LOCALE_STORAGE_KEY } from 'constants/localeStorage';\n\ninterface CalendarDay {\n  day: number;\n  isWeekend: boolean;\n  isToday: boolean;\n}\n\nconst DashBoard: FC = () => {\n  const vacations = JSON.parse(\n    localStorage.getItem(LOCALE_STORAGE_KEY) || '[]'\n  );\n\n  const [isActual, setIsActual] = useState(true);\n  const [isTable, setIsTable] = useState(true);\n  const [payload, setPayload] = useState(0);\n  const [calendarDays, setCalendarDays] = useState<CalendarDay[]>([]);\n\n  useEffect(() => {\n    setCalendarDays(getCalendarDays(TOTAL_DAYS, payload).days);\n  }, [payload]);\n\n  return (\n    <Container>\n      <DashboardNavigation\n        isActual={isActual}\n        isTable={isTable}\n        setIsActual={setIsActual}\n        setIsTable={setIsTable}\n      />\n      {isTable ? (\n        <DashboardTable isActual={isActual} vacations={vacations} />\n      ) : (\n        <Calendar\n          calendarDays={calendarDays}\n          setPayload={setPayload}\n          currentYear={getCalendarDays(TOTAL_DAYS, payload).currentYear}\n          currentMonth={getCalendarDays(TOTAL_DAYS, payload).currentMonth}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default DashBoard;\n"],"names":["LOCALE_STORAGE_KEY","TOTAL_DAYS","EditButton","styled","vacations","navigate","useNavigate","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","id","vacationType","startDate","endDate","note","scope","onClick","SwitcherContainer","SwitcherButton","isActual","setIsActual","style","backgroundColor","MaterialUISwitch","Switch","theme","width","height","padding","margin","transform","color","palette","mode","content","position","left","top","backgroundRepeat","backgroundPosition","opacity","borderRadius","isTable","setIsTable","FormControlLabel","control","m","checked","value","label","NavigationContainer","LeftSideNavigation","AddNewButton","NavLink","to","CalendarGrid","CellWrapper","RowInCell","DayInCell","CalendarTitle","ControlButtons","ControlsWrapper","ControlButton","setPayload","currentYear","currentMonth","s","calendarDays","day","isWeekend","isToday","nanoid","totalDays","payload","today","dayjs","add","startOf","days","Array","_","index","currentDay","Number","format","year","JSON","parse","localStorage","getItem","useState","setCalendarDays","useEffect","getCalendarDays","Container"],"sourceRoot":""}